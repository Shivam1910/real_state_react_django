{"ast":null,"code":"import { LOGIN_FAIL, LOGIN_SUCCESS, SIGNUP_FAIL, SIGNUP_SUCCESS, LOGOUT } from \"./types\";\nimport setAlert from \"./alert\";\nimport axios from \"axios\";\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post(`${process.env.REACT_APP_API_URL}/api/token/`, body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data,\n      userInfo: email\n    });\n    dispatch(setAlert(\"Authenticated Successfully\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: LOGIN_FAIL\n    });\n    dispatch(setAlert(\"Error Authenticating\", \"danger\"));\n  }\n};\nexport const signup = (name, email, password, password2) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password,\n    password2\n  });\n\n  try {\n    const res = await axios.post(`${process.env.REACT_APP_API_URL}/api/accounts/signup`, body, config);\n    dispatch({\n      type: SIGNUP_SUCCESS,\n      payload: res.data,\n      userInfo: email\n    });\n    dispatch(setAlert(\"Signup Successful\", \"success\"));\n    dispatch(login(email, password));\n  } catch (err) {\n    dispatch({\n      type: SIGNUP_FAIL\n    });\n    dispatch(setAlert(\"Error Signing up\", \"danger\"));\n  }\n};\nexport const logout = () => async dispatch => {\n  dispatch({\n    type: LOGOUT\n  });\n  dispatch(setAlert(\"Logout Successful\", \"success\"));\n};","map":{"version":3,"sources":["D:/Django_python/Real-Estate/frontend/src/store/actions/auth.js"],"names":["LOGIN_FAIL","LOGIN_SUCCESS","SIGNUP_FAIL","SIGNUP_SUCCESS","LOGOUT","setAlert","axios","login","email","password","dispatch","config","headers","body","JSON","stringify","res","post","process","env","REACT_APP_API_URL","type","payload","data","userInfo","err","signup","name","password2","logout"],"mappings":"AAAA,SACIA,UADJ,EAEIC,aAFJ,EAGIC,WAHJ,EAIIC,cAJJ,EAKIC,MALJ,QAMO,SANP;AAOA,OAAOC,QAAP,MAAqB,SAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAOC,QAAP,IAAoB;AAC1D,QAAMC,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AADE,GAAf;AAKA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEP,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAf,CAAb;;AACA,MAAI;AACA,UAAMO,GAAG,GAAG,MAAMV,KAAK,CAACW,IAAN,CACb,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,aADnB,EAEdP,IAFc,EAGdF,MAHc,CAAlB;AAKAD,IAAAA,QAAQ,CAAC;AACLW,MAAAA,IAAI,EAAEpB,aADD;AAELqB,MAAAA,OAAO,EAAEN,GAAG,CAACO,IAFR;AAGLC,MAAAA,QAAQ,EAAEhB;AAHL,KAAD,CAAR;AAKAE,IAAAA,QAAQ,CAACL,QAAQ,CAAC,4BAAD,EAA+B,SAA/B,CAAT,CAAR;AACH,GAZD,CAYE,OAAOoB,GAAP,EAAY;AACVf,IAAAA,QAAQ,CAAC;AACLW,MAAAA,IAAI,EAAErB;AADD,KAAD,CAAR;AAGAU,IAAAA,QAAQ,CAACL,QAAQ,CAAC,sBAAD,EAAyB,QAAzB,CAAT,CAAR;AACH;AACJ,CAzBM;AA2BP,OAAO,MAAMqB,MAAM,GACf,CAACC,IAAD,EAAOnB,KAAP,EAAcC,QAAd,EAAwBmB,SAAxB,KAAsC,MAAOlB,QAAP,IAAoB;AACtD,QAAMC,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AADE,GAAf;AAKA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEY,IAAAA,IAAF;AAAQnB,IAAAA,KAAR;AAAeC,IAAAA,QAAf;AAAyBmB,IAAAA;AAAzB,GAAf,CAAb;;AACA,MAAI;AACA,UAAMZ,GAAG,GAAG,MAAMV,KAAK,CAACW,IAAN,CACb,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,sBADnB,EAEdP,IAFc,EAGdF,MAHc,CAAlB;AAKAD,IAAAA,QAAQ,CAAC;AACLW,MAAAA,IAAI,EAAElB,cADD;AAELmB,MAAAA,OAAO,EAAEN,GAAG,CAACO,IAFR;AAGLC,MAAAA,QAAQ,EAAEhB;AAHL,KAAD,CAAR;AAKAE,IAAAA,QAAQ,CAACL,QAAQ,CAAC,mBAAD,EAAsB,SAAtB,CAAT,CAAR;AACAK,IAAAA,QAAQ,CAACH,KAAK,CAACC,KAAD,EAAQC,QAAR,CAAN,CAAR;AACH,GAbD,CAaE,OAAOgB,GAAP,EAAY;AACVf,IAAAA,QAAQ,CAAC;AACLW,MAAAA,IAAI,EAAEnB;AADD,KAAD,CAAR;AAGAQ,IAAAA,QAAQ,CAACL,QAAQ,CAAC,kBAAD,EAAqB,QAArB,CAAT,CAAR;AACH;AACJ,CA3BE;AA6BP,OAAO,MAAMwB,MAAM,GAAG,MAAM,MAAOnB,QAAP,IAAoB;AAC5CA,EAAAA,QAAQ,CAAC;AAAEW,IAAAA,IAAI,EAAEjB;AAAR,GAAD,CAAR;AACAM,EAAAA,QAAQ,CAACL,QAAQ,CAAC,mBAAD,EAAsB,SAAtB,CAAT,CAAR;AACH,CAHM","sourcesContent":["import {\r\n    LOGIN_FAIL,\r\n    LOGIN_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    SIGNUP_SUCCESS,\r\n    LOGOUT,\r\n} from \"./types\";\r\nimport setAlert from \"./alert\";\r\nimport axios from \"axios\";\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n    const body = JSON.stringify({ email, password });\r\n    try {\r\n        const res = await axios.post(\r\n            `${process.env.REACT_APP_API_URL}/api/token/`,\r\n            body,\r\n            config\r\n        );\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data,\r\n            userInfo: email,\r\n        });\r\n        dispatch(setAlert(\"Authenticated Successfully\", \"success\"));\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGIN_FAIL,\r\n        });\r\n        dispatch(setAlert(\"Error Authenticating\", \"danger\"));\r\n    }\r\n};\r\n\r\nexport const signup =\r\n    (name, email, password, password2) => async (dispatch) => {\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        };\r\n        const body = JSON.stringify({ name, email, password, password2 });\r\n        try {\r\n            const res = await axios.post(\r\n                `${process.env.REACT_APP_API_URL}/api/accounts/signup`,\r\n                body,\r\n                config\r\n            );\r\n            dispatch({\r\n                type: SIGNUP_SUCCESS,\r\n                payload: res.data,\r\n                userInfo: email,\r\n            });\r\n            dispatch(setAlert(\"Signup Successful\", \"success\"));\r\n            dispatch(login(email, password));\r\n        } catch (err) {\r\n            dispatch({\r\n                type: SIGNUP_FAIL,\r\n            });\r\n            dispatch(setAlert(\"Error Signing up\", \"danger\"));\r\n        }\r\n    };\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    dispatch({ type: LOGOUT });\r\n    dispatch(setAlert(\"Logout Successful\", \"success\"));\r\n};\r\n"]},"metadata":{},"sourceType":"module"}